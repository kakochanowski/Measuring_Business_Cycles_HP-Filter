length(Countryb)
countryb <- as.data.frame(Countryb)
#View(countryb)
countryb2 <- t(countryb)
#View(countryb2)
US6 <- cbind(US5, countryb2)
#View(US6)
#Name year variable
US_final <- tibble::rownames_to_column(US6, "YEAR")
US_final <- rename(US_final, COUNTRY = countryb2)
US_final <- select(US_final, "YEAR", "COUNTRY", "NY.GDP.PCAP.KN", "NE.GDI.TOTL.ZS", "NE.CON.GOVT.ZS", "NE.IMP.GNFS.ZS", "NE.EXP.GNFS.ZS", "NE.CON.PETC.ZS")
US_final <- filter(US_final, YEAR >= "1965")
View(US_final)
#Re-ordering variables and setting to numeric
US_data <- rename(US_final, GDPCapita = NY.GDP.PCAP.KN, HHConPct = NE.CON.PETC.ZS, GCapFormPct = NE.GDI.TOTL.ZS, GovtConPct = NE.CON.GOVT.ZS, ImpPct = NE.IMP.GNFS.ZS, ExpPct = NE.EXP.GNFS.ZS)
US_data$GDPCapita <- as.numeric(US_data$GDPCapita)
US_data$HHConPct <- as.numeric(US_data$HHConPct)
US_data$GCapFormPct <- as.numeric(US_data$GCapFormPct)
US_data$GovtConPct <- as.numeric(US_data$GovtConPct)
US_data$ImpPct <- as.numeric(US_data$ImpPct)
US_data$ExpPct <- as.numeric(US_data$ExpPct)
US_data$YEAR <- as.numeric(US_data$YEAR)
US_data$logGDP<-log(US_data$GDPCapita)
View(US_data)
GDP_data <- rbind(SKorea_data, US_data)
View(GDP_data)
View(SKorea_data)
View(US_data)
US_metrics <- data.frame(US)
sample_below <- c()
for(i in 1:30) {
y <- sum(y+0.00064307)
sample_below <- c(sample_below, y)
}
player_stats <- as.data.frame(nhl_players_seasons(
playerIds = c(player_IDs$`newX[, i]`), seasons= 2019))
player_stats <- as.data.frame(nhl_players_seasons(
playerIds = c(player_IDs$`newX[, i]`), seasons= 2019))
View(player_stats)
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
library(dplyr)
library(nhlapi)
#Teams
nhl_teams()
NHL_teams <- as.data.frame(nhl_teams())
NHL_teams <- rename(NHL_teams, team_id = id, team_name = name)
#Collect rosters for all teams in past two years (not current)
#2019
rosters_2019 <- nhl_teams_rosters(teamIds=c(1:32), seasons = c(2019))
rosters_2019 <- as.data.frame(rosters_2019)
#Remove unnecessary columns
rosters_2019 <- subset(rosters_2019, select=c(-division.abbreviation, -division.nameShort))
#Add year ID (so we can easily determine the roster years)
year_19 <- rep(2019, 28)
rosters_2019$year <- year_19
#2020
rosters_2020 <- nhl_teams_rosters(teamIds=c(1:32), seasons = 2020)
rosters_2020 <- as.data.frame(rosters_2020)
#Add year ID (so we can easily determine the roster years)
year_20 <- rep(2020, 28)
rosters_2020$year <- year_20
#Combine years
Rosters_19.20 <- rbind(rosters_2019, rosters_2020)
View(Rosters_19.20)
#Pulling out player IDs
roster <- unnest(Rosters_19.20, cols=roster.roster, names_repair="check_unique", keep_empty = TRUE)
lists <- apply(roster, 2, as.data.frame)
player_IDs <- as.data.frame(lists$person.id)
View(player_IDs)
player_IDs <- rename(player_IDs, id=newX[,i])
#Pulling out player IDs
roster <- unnest(Rosters_19.20, cols=roster.roster, names_repair="check_unique", keep_empty = TRUE)
lists <- apply(roster, 2, as.data.frame)
player_IDs <- as.data.frame(lists$person.id)
View(player_IDs)
#Pulling out player IDs
roster <- unnest(Rosters_19.20, cols=roster.roster, names_repair="check_unique", keep_empty = TRUE)
lists <- apply(roster, 2, as.data.frame)
player_IDs <- as.data.frame(lists$person.id)
View(player_IDs)
player_IDs <- rename(player_IDs, id='newX[,i]')
#Pulling out player IDs
roster <- unnest(Rosters_19.20, cols=roster.roster, names_repair="check_unique", keep_empty = TRUE)
lists <- apply(roster, 2, as.data.frame)
player_IDs <- as.data.frame(lists$person.id)
View(player_IDs)
#Running NHL player stat fxn and creating data frame
player_stats <- as.data.frame(nhl_players_seasons(
playerIds = c(player_IDs$`newX[, i]`), seasons= 2019))
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(jsonlite)
library(dplyr)
library(nhlapi)
#Teams
nhl_teams()
NHL_teams <- as.data.frame(nhl_teams())
NHL_teams <- rename(NHL_teams, team_id = id, team_name = name)
#Collect rosters for all teams in past two years (not current)
#2019
rosters_2019 <- nhl_teams_rosters(teamIds=c(1:32), seasons = c(2019))
rosters_2019 <- as.data.frame(rosters_2019)
#Remove unnecessary columns
rosters_2019 <- subset(rosters_2019, select=c(-division.abbreviation, -division.nameShort))
#Add year ID (so we can easily determine the roster years)
year_19 <- rep(2019, 28)
rosters_2019$year <- year_19
#2020
rosters_2020 <- nhl_teams_rosters(teamIds=c(1:32), seasons = 2020)
rosters_2020 <- as.data.frame(rosters_2020)
#Add year ID (so we can easily determine the roster years)
year_20 <- rep(2020, 28)
rosters_2020$year <- year_20
#Combine years
Rosters_19.20 <- rbind(rosters_2019, rosters_2020)
View(Rosters_19.20)
#Pulling out player IDs
roster <- unnest(Rosters_19.20, cols=roster.roster, names_repair="check_unique", keep_empty = TRUE)
lists <- apply(roster, 2, as.data.frame)
player_IDs <- as.data.frame(lists$person.id)
View(player_IDs)
#Running NHL player stat fxn and creating data frame
player_stats <- as.data.frame(nhl_players_seasons(
playerIds = c(player_IDs$`newX[, i]`), seasons= 2019))
View(player_stats)
library(readxl) #reading excel files
library(tidyverse)
library(haven)
library(dplyr)
library(ggplot2)
#install.packages("mFilter")
library(mFilter) #Package used for hp filter
library(cowplot) #Allows for side by side graphs
#Kiersten's WD
getwd()
#install.packages("readxl")
library(readxl)
original <- read_excel("/Users/Kiersten/Documents/School/Session 3/Macro/Measuring_Business_Cycles_HP-Filter/Data/usg_data_annual.xls")
#View(original)
#Select United States and South Korea data
GDP1<- filter(original, Country_Name=="United States" | Country_Name=="Korea, Rep.")
#View(GDP1)
#Filter for relevant business-cycle statistics
GDP2 <- filter(GDP1, Indicator_Code=="NY.GDP.PCAP.KN" | Indicator_Code=="NE.CON.PETC.ZS" | Indicator_Code=="NE.GDI.TOTL.ZS" | Indicator_Code=="NE.CON.GOVT.ZS" | Indicator_Code=="NE.IMP.GNFS.ZS" | Indicator_Code=="NE.EXP.GNFS.ZS")
#View(GDP2)
#Separating DFs by country to make restructuring simpler (maybe)
SKorea<- filter(GDP2, Country_Name=="Korea, Rep.")
#View(SKorea)
#Remove first three columns in order to transpose
SKorea2 <- t(SKorea)
View(SKorea2)
SKorea3 <- SKorea2[-c(1,2,3),]
#View(SKorea3)
#Change values to numeric
SKorea3 <- as.data.frame(SKorea3)
#Rename variables
SKorea4 <- SKorea3 %>%
select(V1, V2, V3, V4, V5, V6) %>%
rename(NY.GDP.PCAP.KN = V1, NE.GDI.TOTL.ZS = V2, NE.CON.GOVT.ZS = V3, NE.IMP.GNFS.ZS = V4, NE.EXP.GNFS.ZS = V5, NE.CON.PETC.ZS = V6)
#View(SKorea4)
SKorea5 <- SKorea4[-c(1),]
#View(SKorea5)
#Add Country variable
Country <- as.list(rep("S. Korea", 52))
length(Country)
country <- as.data.frame(Country)
#View(country)
country2 <- t(country)
#View(country2)
SKorea6 <- cbind(SKorea5, country2)
#View(SKorea6)
#Name year variable
SKorea_final <- tibble::rownames_to_column(SKorea6, "YEAR")
SKorea_final <- rename(SKorea_final, COUNTRY = country2)
SKorea_final <- select(SKorea_final, "YEAR", "COUNTRY", "NY.GDP.PCAP.KN", "NE.GDI.TOTL.ZS", "NE.CON.GOVT.ZS", "NE.IMP.GNFS.ZS", "NE.EXP.GNFS.ZS", "NE.CON.PETC.ZS")
View(SKorea_final)
#Re-ordering variables and setting to numeric
SKorea_data <- rename(SKorea_final, GDPCapita = NY.GDP.PCAP.KN, HHConPct = NE.CON.PETC.ZS, GCapFormPct = NE.GDI.TOTL.ZS, GovtConPct = NE.CON.GOVT.ZS, ImpPct = NE.IMP.GNFS.ZS, ExpPct = NE.EXP.GNFS.ZS)
SKorea_data$GDPCapita <- as.numeric(SKorea_data$GDPCapita)
SKorea_data$HHConPct <- as.numeric(SKorea_data$HHConPct)
SKorea_data$GCapFormPct <- as.numeric(SKorea_data$GCapFormPct)
SKorea_data$GovtConPct <- as.numeric(SKorea_data$GovtConPct)
SKorea_data$ImpPct <- as.numeric(SKorea_data$ImpPct)
SKorea_data$ExpPct <- as.numeric(SKorea_data$ExpPct)
SKorea_data$YEAR <- as.numeric(SKorea_data$YEAR)
SKorea_data$logGDP<-log(SKorea_data$GDPCapita)
View(SKorea_data)
US<- filter(GDP2, Country_Name=="United States")
#View(US)
#Remove first three columns in order to transpose
US2 <- t(US)
#View(US2)
US3 <- US2[-c(1,2,3),]
#View(US3)
#Change values to numeric
US3 <- as.data.frame(US3)
#Rename variables
US4 <- US3 %>%
select(V1, V2, V3, V4, V5, V6) %>%
rename(NY.GDP.PCAP.KN = V1, NE.GDI.TOTL.ZS = V2, NE.CON.GOVT.ZS = V3, NE.IMP.GNFS.ZS = V4, NE.EXP.GNFS.ZS = V5, NE.CON.PETC.ZS = V6)
#View(US4)
US5 <- US4[-c(1),]
#View(US5)
#Add Country variable
Countryb <- as.list(rep("US", 52))
length(Countryb)
countryb <- as.data.frame(Countryb)
#View(countryb)
countryb2 <- t(countryb)
#View(countryb2)
US6 <- cbind(US5, countryb2)
#View(US6)
#Name year variable
US_final <- tibble::rownames_to_column(US6, "YEAR")
US_final <- rename(US_final, COUNTRY = countryb2)
US_final <- select(US_final, "YEAR", "COUNTRY", "NY.GDP.PCAP.KN", "NE.GDI.TOTL.ZS", "NE.CON.GOVT.ZS", "NE.IMP.GNFS.ZS", "NE.EXP.GNFS.ZS", "NE.CON.PETC.ZS")
US_final <- filter(US_final, YEAR >= "1965")
View(US_final)
#Re-ordering variables and setting to numeric
US_data <- rename(US_final, GDPCapita = NY.GDP.PCAP.KN, HHConPct = NE.CON.PETC.ZS, GCapFormPct = NE.GDI.TOTL.ZS, GovtConPct = NE.CON.GOVT.ZS, ImpPct = NE.IMP.GNFS.ZS, ExpPct = NE.EXP.GNFS.ZS)
US_data$GDPCapita <- as.numeric(US_data$GDPCapita)
US_data$HHConPct <- as.numeric(US_data$HHConPct)
US_data$GCapFormPct <- as.numeric(US_data$GCapFormPct)
US_data$GovtConPct <- as.numeric(US_data$GovtConPct)
US_data$ImpPct <- as.numeric(US_data$ImpPct)
US_data$ExpPct <- as.numeric(US_data$ExpPct)
US_data$YEAR <- as.numeric(US_data$YEAR)
US_data$logGDP<-log(US_data$GDPCapita)
View(US_data)
GDP_data <- rbind(SKorea_data, US_data)
View(GDP_data)
View(SKorea_data)
View(US_data)
US_metrics <- data.frame(US)
sample_below <- c()
for(i in 1:30) {
y <- sum(y+0.00064307)
sample_below <- c(sample_below, y)
}
#Kiersten's WD
getwd()
#install.packages("readxl")
library(readxl)
original <- read_excel("/Users/Kiersten/Documents/School/Session 3/Macro/Measuring_Business_Cycles_HP-Filter/Data/usg_data_annual.xls")
#View(original)
#Select United States and South Korea data
GDP1<- filter(original, Country_Name=="United States" | Country_Name=="Korea, Rep.")
#View(GDP1)
#Filter for relevant business-cycle statistics
GDP2 <- filter(GDP1, Indicator_Code=="NY.GDP.PCAP.KN" | Indicator_Code=="NE.CON.PETC.ZS" | Indicator_Code=="NE.GDI.TOTL.ZS" | Indicator_Code=="NE.CON.GOVT.ZS" | Indicator_Code=="NE.IMP.GNFS.ZS" | Indicator_Code=="NE.EXP.GNFS.ZS")
View(GDP2)
#Logged GDP/capita with lambda 100
gdp.hp_US_100<-hpfilter(US_data$logGDP, freq = 100,type = "lambda")
US_data$gdp_T_100<-gdp.hp_US_100$trend
US_data$gdp_C_100<-gdp.hp_US_100$cycle
#Logged GDP/capita with lambda 6.25
gdp.hp_US_6<-hpfilter(US_data$logGDP, freq = 6.25,type = "lambda")
US_data$gdp_T_6<-gdp.hp_US_6$trend
US_data$gdp_C_6<-gdp.hp_US_6$cycle
#Household consumption as pct of GDP
HHCons.hp_US<-hpfilter(US_data$HHConPct, freq = 100,type = "lambda") #not working since US missing data from '60-65
US_data$HHCons_T<-HHCons.hp_US$trend
US_data$HHCons_C<-HHCons.hp_US$cycle
#Gross capital formation as pct of GDP
GCapForm.hp_US<-hpfilter(US_data$GCapFormPct, freq = 100,type = "lambda") #not working since US missing data from '60-65
US_data$GCapForm_T<-GCapForm.hp_US$trend
US_data$GCapForm_C<-GCapForm.hp_US$cycle
#Government consumption as pct of GDP
GovtConPct.hp_US<-hpfilter(US_data$GovtConPct, freq = 100,type = "lambda")
US_data$GovtConPct_T<-GovtConPct.hp_US$trend
US_data$GovtConPct_C<-GovtConPct.hp_US$cycle
#Imports as pct of GDP
ImpPct.hp_US<-hpfilter(US_data$ImpPct, freq = 100,type = "lambda")
US_data$ImpPct_T<-ImpPct.hp_US$trend
US_data$ImpPct_C<-ImpPct.hp_US$cycle
#Exports as pct of GDP
ExpPct.hp_US<-hpfilter(US_data$ExpPct, freq = 100,type = "lambda")
US_data$ExpPct_T<-ExpPct.hp_US$trend
US_data$ExpPct_C<-ExpPct.hp_US$cycle
View(US_data)
plot_grid(plot1, plot2, ncol = 1,align = 'v')
plot_grid(plot3, plot4, ncol = 1,align = 'v')
#Logged GDP/capita with lambda 100
gdp.hp_SK_100<-hpfilter(SKorea_data$logGDP, freq = 100,type = "lambda")
SKorea_data$gdp_T_100<-gdp.hp_SK_100$trend
SKorea_data$gdp_C_100<-gdp.hp_SK_100$cycle
#Logged GDP/capita with lambda 6.25
gdp.hp_SK_6<-hpfilter(SKorea_data$logGDP, freq = 6.25,type = "lambda")
SKorea_data$gdp_T_6<-gdp.hp_SK_6$trend
SKorea_data$gdp_C_6<-gdp.hp_SK_6$cycle
#Household consumption as pct of GDP with lambda 100
HHCons.hp_SK<-hpfilter(SKorea_data$HHConPct, freq = 100,type = "lambda") #not working since US missing data from '60-65
SKorea_data$HHCons_T_100<-HHCons.hp_SK$trend
SKorea_data$HHCons_C_100<-HHCons.hp_SK$cycle
#Household consumption as pct of GDP with lambda 6.25
HHCons.hp_SK<-hpfilter(SKorea_data$HHConPct, freq = 6.25,type = "lambda") #not working since US missing data from '60-65
SKorea_data$HHCons_T_6<-HHCons.hp_SK$trend
SKorea_data$$HHCons_C_6<-HHCons.hp_SK$cycle
#Logged GDP/capita with lambda 100
gdp.hp_SK_100<-hpfilter(SKorea_data$logGDP, freq = 100,type = "lambda")
SKorea_data$gdp_T_100<-gdp.hp_SK_100$trend
SKorea_data$gdp_C_100<-gdp.hp_SK_100$cycle
#Logged GDP/capita with lambda 6.25
gdp.hp_SK_6<-hpfilter(SKorea_data$logGDP, freq = 6.25,type = "lambda")
SKorea_data$gdp_T_6<-gdp.hp_SK_6$trend
SKorea_data$gdp_C_6<-gdp.hp_SK_6$cycle
#Household consumption as pct of GDP with lambda 100
HHCons.hp_SK<-hpfilter(SKorea_data$HHConPct, freq = 100,type = "lambda") #not working since US missing data from '60-65
SKorea_data$HHCons_T_100<-HHCons.hp_SK$trend
SKorea_data$HHCons_C_100<-HHCons.hp_SK$cycle
#Household consumption as pct of GDP with lambda 6.25
HHCons.hp_SK<-hpfilter(SKorea_data$HHConPct, freq = 6.25,type = "lambda") #not working since US missing data from '60-65
SKorea_data$HHCons_T_6<-HHCons.hp_SK$trend
SKorea_data$HHCons_C_6<-HHCons.hp_SK$cycle
#Gross capital formation as pct of GDP with lambda 100
GCapForm.hp_SK<-hpfilter(SKorea_data$GCapFormPct, freq = 100,type = "lambda") #not working since US missing data from '60-65
SKorea_data$GCapForm_T_100<-GCapForm.hp_US$trend
#Logged GDP/capita with lambda 100
gdp.hp_SK_100<-hpfilter(SKorea_data$logGDP, freq = 100,type = "lambda")
SKorea_data$gdp_T_100<-gdp.hp_SK_100$trend
SKorea_data$gdp_C_100<-gdp.hp_SK_100$cycle
#Logged GDP/capita with lambda 6.25
gdp.hp_SK_6<-hpfilter(SKorea_data$logGDP, freq = 6.25,type = "lambda")
SKorea_data$gdp_T_6<-gdp.hp_SK_6$trend
SKorea_data$gdp_C_6<-gdp.hp_SK_6$cycle
#Household consumption as pct of GDP with lambda 100
HHCons.hp_SK<-hpfilter(SKorea_data$HHConPct, freq = 100,type = "lambda") #not working since US missing data from '60-65
SKorea_data$HHCons_T_100<-HHCons.hp_SK$trend
SKorea_data$HHCons_C_100<-HHCons.hp_SK$cycle
#Household consumption as pct of GDP with lambda 6.25
HHCons.hp_SK<-hpfilter(SKorea_data$HHConPct, freq = 6.25,type = "lambda") #not working since US missing data from '60-65
SKorea_data$HHCons_T_6<-HHCons.hp_SK$trend
SKorea_data$HHCons_C_6<-HHCons.hp_SK$cycle
#Gross capital formation as pct of GDP with lambda 100
GCapForm.hp_SK<-hpfilter(SKorea_data$GCapFormPct, freq = 100,type = "lambda") #not working since US missing data from '60-65
SKorea_data$GCapForm_T_100<-GCapForm.hp_SK$trend
SKorea_data$GCapForm_C_100<-GCapForm.hp_SK$cycle
#Gross capital formation as pct of GDP with lambda 6.25
GCapForm.hp_SK<-hpfilter(SKorea_data$GCapFormPct, freq = 6.25,type = "lambda") #not working since US missing data from '60-65
SKorea_data$GCapForm_T_6<-GCapForm.hp_SK$trend
SKorea_data$GCapForm_C_6<-GCapForm.hp_SK$cycle
#Government consumption as pct of GDP with lambda 100
GovtConPct.hp_SK<-hpfilter(SKorea_data$GovtConPct, freq = 100,type = "lambda")
SKorea_data$GovtConPct_T_100<-GovtConPct.hp_SK$trend
SKorea_data$GovtConPct_C_100<-GovtConPct.hp_SK$cycle
#Government consumption as pct of GDP with lambda 6.25
GovtConPct.hp_SK<-hpfilter(SKorea_data$GovtConPct, freq = 6.25,type = "lambda")
SKorea_data$GovtConPct_T_6<-GovtConPct.hp_SK$trend
SKorea_data$GovtConPct_C_6<-GovtConPct.hp_SK$cycle
#Imports as pct of GDP with lambda 100
ImpPct.hp_SK<-hpfilter(SKorea_data$ImpPct, freq = 100,type = "lambda")
SKorea_data$ImpPct_T_100<-ImpPct.hp_SK$trend
SKorea_data$ImpPct_C_100<-ImpPct.hp_SK$cycle
#Imports as pct of GDP with lambda 6.25
ImpPct.hp_SK<-hpfilter(SKorea_data$ImpPct, freq = 6.25,type = "lambda")
SKorea_data$ImpPct_T_6<-ImpPct.hp_SK$trend
SKorea_data$ImpPct_C_6<-ImpPct.hp_SK$cycle
#Exports as pct of GDP with lambda 100
ExpPct.hp_SK<-hpfilter(SKorea_data$ExpPct, freq = 100,type = "lambda")
SKorea_data$ExpPct_T_100<-ExpPct.hp_SK$trend
SKorea_data$ExpPct_C_100<-ExpPct.hp_SK$cycle
#Exports as pct of GDP with lambda 6.25
ExpPct.hp_SK<-hpfilter(SKorea_data$ExpPct, freq = 6.25,type = "lambda")
SKorea_data$ExpPct_T_6<-ExpPct.hp_SK$trend
SKorea_data$ExpPct_C_6<-ExpPct.hp_SK$cycle
View(US_data)
#Logged GDP/capita with lambda 100
gdp.hp_US_100<-hpfilter(US_data$logGDP, freq = 100,type = "lambda")
US_data$gdp_T_100<-gdp.hp_US_100$trend
US_data$gdp_C_100<-gdp.hp_US_100$cycle
#Logged GDP/capita with lambda 6.25
gdp.hp_US_6<-hpfilter(US_data$logGDP, freq = 6.25,type = "lambda")
US_data$gdp_T_6<-gdp.hp_US_6$trend
US_data$gdp_C_6<-gdp.hp_US_6$cycle
#Household consumption as pct of GDP with lambda 100
HHCons.hp_US<-hpfilter(US_data$HHConPct, freq = 100,type = "lambda") #not working since US missing data from '60-65
US_data$HHCons_T_100<-HHCons.hp_US$trend
US_data$HHCons_C_100<-HHCons.hp_US$cycle
#Household consumption as pct of GDP with lambda 6.25
HHCons.hp_US<-hpfilter(US_data$HHConPct, freq = 6.25,type = "lambda") #not working since US missing data from '60-65
US_data$HHCons_T_6<-HHCons.hp_US$trend
US_data$HHCons_C_6<-HHCons.hp_US$cycle
#Gross capital formation as pct of GDP with lambda 100
GCapForm.hp_US<-hpfilter(US_data$GCapFormPct, freq = 100,type = "lambda") #not working since US missing data from '60-65
US_data$GCapForm_T_100<-GCapForm.hp_US$trend
US_data$GCapForm_C_100<-GCapForm.hp_US$cycle
#Gross capital formation as pct of GDP with lambda 6.25
GCapForm.hp_US<-hpfilter(US_data$GCapFormPct, freq = 6.25,type = "lambda") #not working since US missing data from '60-65
US_data$GCapForm_T_6<-GCapForm.hp_US$trend
US_data$GCapForm_C_6<-GCapForm.hp_US$cycle
#Government consumption as pct of GDP with lambda 100
GovtConPct.hp_US<-hpfilter(US_data$GovtConPct, freq = 100,type = "lambda")
US_data$GovtConPct_T_100<-GovtConPct.hp_US$trend
US_data$GovtConPct_C_100<-GovtConPct.hp_US$cycle
#Government consumption as pct of GDP with lambda 6.25
GovtConPct.hp_US<-hpfilter(US_data$GovtConPct, freq = 6.25,type = "lambda")
US_data$GovtConPct_T_6<-GovtConPct.hp_US$trend
US_data$GovtConPct_C_6<-GovtConPct.hp_US$cycle
#Imports as pct of GDP with lambda 100
ImpPct.hp_US<-hpfilter(US_data$ImpPct, freq = 100,type = "lambda")
US_data$ImpPct_T_100<-ImpPct.hp_US$trend
US_data$ImpPct_C_100<-ImpPct.hp_US$cycle
#Imports as pct of GDP with lambda 6.25
ImpPct.hp_US<-hpfilter(US_data$ImpPct, freq = 6.25,type = "lambda")
US_data$ImpPct_T_6<-ImpPct.hp_US$trend
US_data$ImpPct_C_6<-ImpPct.hp_US$cycle
#Exports as pct of GDP with lambda 100
ExpPct.hp_US<-hpfilter(US_data$ExpPct, freq = 100,type = "lambda")
US_data$ExpPct_T_100<-ExpPct.hp_US$trend
US_data$ExpPct_C_100<-ExpPct.hp_US$cycle
#Exports as pct of GDP with lambda 6.25
ExpPct.hp_US<-hpfilter(US_data$ExpPct, freq = 6.25,type = "lambda")
US_data$ExpPct_T_6<-ExpPct.hp_US$trend
US_data$ExpPct_C_6<-ExpPct.hp_US$cycle
View(US_data)
plot1<-ggplot(data=US_data)+
geom_line(aes(x=YEAR,y=logGDP,color='Log GDP', group=1),size=1.5) +
geom_line(aes(x=YEAR,y=gdp_T_100,color='Log GDP Secular', group=1),linetype=1,size=1.5) +
xlab("Year")+
ylab("")+
scale_colour_manual(name="",values=c('Log GDP'='blue','Log GDP Secular'='red'))+
ggtitle('US GDP Trend')+
theme(plot.title = element_text(hjust = 0.5))
plot_grid(plot1, plot2, ncol = 1,align = 'v')
plot3<-ggplot(data=US_data)+
geom_line(aes(x=YEAR,y=logGDP,color='Log GDP', group=1),size=1.5) +
geom_line(aes(x=YEAR,y=gdp_T_6,color='Log GDP Secular', group=1),linetype=1,size=1.5) +
xlab("Year")+
ylab("")+
scale_colour_manual(name="",values=c('Log GDP'='blue','Log GDP Secular'='red'))+
ggtitle('US GDP Trend')+
theme(plot.title = element_text(hjust = 0.5))
plot_grid(plot3, plot4, ncol = 1,align = 'v')
US_data$GDP_US__100_sd <- sd(sum((US_data$gdp_C_100)-(US_data$gdp_T_100))
US_data$GDP_US__6_sd <- sd(sum((US_data$gdp_C_6)-(US_data$gdp_T_6))
US_data$GDP_US__100_sd <- (sum((US_data$gdp_C_100)-(US_data$gdp_T_100))
US_data$GDP_US__6_sd <- sd(sum((US_data$gdp_C_6)-(US_data$gdp_T_6))
GDP_US__100_sd <- (sum((US_data$gdp_C_100)-(US_data$gdp_T_100))
US_data$GDP_US__6_sd <- sd(sum((US_data$gdp_C_6)-(US_data$gdp_T_6))
GDP_US__100_sd <- sd((US_data$gdp_C_100)-(US_data$gdp_T_100))
US_data$GDP_US__6_sd <- sd(sum((US_data$gdp_C_6)-(US_data$gdp_T_6))
GDP_US__100_sd <- sd((US_data$gdp_C_100)-(US_data$gdp_T_100))
US_data$GDP_US__6_sd <- sd((US_data$gdp_C_6)-(US_data$gdp_T_6))
US_data$Cons_US_100_sd <- sd((US_data$HHCons_C_100)-(US_data$HHCons_T_100))
US_data$Cons_US_6_sd <- sd((US_data$HHCons_C_6)-(US_data$HHCons_T_6))
US_table <- as.data.frame()
US_table <- data.frame(Doubles=double(),
Ints=integer(),
Factors=factor(),
Logicals=logical(),
Characters=character(),
stringsAsFactors=FALSE)
US_table$GDP_US__100_sd <- sd((US_data$gdp_C_100)-(US_data$gdp_T_100))
Cons_US_100_sd <- sd((US_data$HHCons_C_100)-(US_data$HHCons_T_100))
Cons_US_6_sd <- sd((US_data$HHCons_C_6)-(US_data$HHCons_T_6))
US_table <- data.frame(Doubles=double(),
Ints=integer(),
Factors=factor(),
Logicals=logical(),
Characters=character(),
stringsAsFactors=FALSE)
GDP_US__100_sd <- sd((US_data$gdp_C_100)-(US_data$gdp_T_100))
GDP_US__6_sd <- sd((US_data$gdp_C_6)-(US_data$gdp_T_6))
Govt_US_100_sd <- sd((US_data$GovtConPct_C_100)-(US_data$GovtConPct_T_100))
Govt_US_6_sd <- sd((US_data$GovtConPct_C_6)-(US_data$GovtConPct_T_6))
Cons_US_100_sd <- sd((US_data$HHCons_C_100)-(US_data$HHCons_T_100))
Cons_US_6_sd <- sd((US_data$HHCons_C_6)-(US_data$HHCons_T_6))
Govt_US_100_sd <- sd((US_data$GovtConPct_C_100)-(US_data$GovtConPct_T_100))
Govt_US_6_sd <- sd((US_data$GovtConPct_C_6)-(US_data$GovtConPct_T_6))
Inv_US_100_sd <- sd((US_data$GCapForm_C_100)-(US_data$GCapForm_T_100))
Inv_US_6_sd <- sd((US_data$GCapForm_C_6)-(US_data$GCapForm_T_6))
Imp_US_100_sd <- sd((US_data$ImpPct_C_100)-(US_data$ImpPct_T_100))
Imp_US_6_sd <- sd((US_data$ImpPct_C_6)-(US_data$ImpPct_T_6))
Exp_US_100_sd <- sd((US_data$ExpPct_C_100)-(US_data$ExpPct_T_100))
Exp_US_6_sd <- sd((US_data$ExpPct_C_6)-(US_data$ExpPct_T_6))
US_table <- data.frame(Doubles=double(),
Ints=integer(),
Factors=factor(),
Logicals=logical(),
Characters=character(),
stringsAsFactors=FALSE)
GDP_US__100 <- (US_data$gdp_C_100)-(US_data$gdp_T_100)
GDP_US__6 <- (US_data$gdp_C_6)-(US_data$gdp_T_6)
GDP_US__100_sd <- sd((US_data$gdp_C_100)-(US_data$gdp_T_100))
GDP_US__6_sd <- sd((US_data$gdp_C_6)-(US_data$gdp_T_6))
GDP_US_100_cor <- cor(GDP_US_100, y=GDP_US_100)
US_table <- data.frame(Doubles=double(),
Ints=integer(),
Factors=factor(),
Logicals=logical(),
Characters=character(),
stringsAsFactors=FALSE)
GDP_US_100 <- (US_data$gdp_C_100)-(US_data$gdp_T_100)
GDP_US__6 <- (US_data$gdp_C_6)-(US_data$gdp_T_6)
GDP_US__100_sd <- sd((US_data$gdp_C_100)-(US_data$gdp_T_100))
GDP_US__6_sd <- sd((US_data$gdp_C_6)-(US_data$gdp_T_6))
GDP_US_100_cor <- cor(GDP_US_100, y=GDP_US_100)
GDP_US_6_cor <- cor(GDP_US_6, y=GDP_US_6)
US_table <- data.frame(Doubles=double(),
Ints=integer(),
Factors=factor(),
Logicals=logical(),
Characters=character(),
stringsAsFactors=FALSE)
GDP_US_100 <- (US_data$gdp_C_100)-(US_data$gdp_T_100)
GDP_US_6 <- (US_data$gdp_C_6)-(US_data$gdp_T_6)
GDP_US__100_sd <- sd((US_data$gdp_C_100)-(US_data$gdp_T_100))
GDP_US__6_sd <- sd((US_data$gdp_C_6)-(US_data$gdp_T_6))
GDP_US_100_cor <- cor(GDP_US_100, y=GDP_US_100)
GDP_US_6_cor <- cor(GDP_US_6, y=GDP_US_6)
